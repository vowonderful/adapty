const{__:__,_x:_x,_n:_n,_nx:_nx}=wp.i18n;export function moduleData(){return{props:{returnData:Function,value:Object},data:function(){return{styles:{opacity:1,overflow:"visible",fill:{},backgroundImage:{},outline:{},borders:[],shadows:[],radius:{sync:!0,topleft:"",topright:"",bottomleft:"",bottomright:"",units:"px"}},strings:{opacity:__("Opacity","uipress-lite"),overflow:__("Overflow","uipress-lite"),fill:__("Fill","uipress-lite"),backgroundImage:__("Background","uipress-lite"),border:__("Border","uipress-lite"),addImage:__("Add image","uipress-lite"),shadow:__("Shadow","uipress-lite"),radius:__("Radius","uipress-lite"),topleft:__("Top left","uipress-lite"),topright:__("Top right","uipress-lite"),bottomleft:__("Bottom left","uipress-lite"),bottomright:__("Bottom right","uipress-lite"),outline:__("Outline","uipress-lite")},overflowOptions:[{value:"visible",label:__("Visible","uipress-lite")},{value:"auto",label:__("Auto","uipress-lite")},{value:"hidden",label:__("Hidden","uipress-lite")},{value:"scroll",label:__("Scroll","uipress-lite")}],spacingOptions:{0:{value:"0",label:"0",tip:__("Remove","uipress-lite")},XS:{value:"XS",label:"XS",tip:__("Extra small","uipress-lite")},S:{value:"S",label:"S",tip:__("Small","uipress-lite")},M:{value:"M",label:"M",tip:__("Medium","uipress-lite")},L:{value:"L",label:"L",tip:__("Large","uipress-lite")},XL:{value:"XL",label:"XL",tip:__("Extra large","uipress-lite")},custom:{value:"custom",icon:"more_vert",tip:__("Custom","uipress-lite")}}}},inject:["uipress"],created:function(){this.formatValue(this.value)},watch:{styles:{handler(i,e){this.returnData(this.styles)},deep:!0}},computed:{returnStyles(){return this.styles},returnBorders(){return this.styles.borders}},methods:{formatValue(i){if(void 0!==i)return this.uipress.isObject(i)?("opacity"in i&&(this.styles.opacity=i.opacity),"overflow"in i&&(this.styles.overflow=i.overflow),"borders"in i&&(this.styles.borders=i.borders),"outline"in i&&(this.styles.outline=i.outline),"fill"in i&&(this.styles.fill={...this.styles.fill,...i.fill}),"backgroundImage"in i&&(this.styles.backgroundImage={...this.styles.backgroundImage,...i.backgroundImage}),"radius"in i&&(this.styles.radius={...this.styles.radius,...i.radius}),void("shadows"in i&&(this.styles.shadows=i.shadows))):void 0},returnBorderColor(i){let e=i.color,n="";return e&&e.value&&(n=e.value.includes("--")?"background-color:var("+e.value+");":"background-color:"+e.value),n},returnShadowColor(i,e){let n=i.color,s="";return n&&n.value&&(s=n.value.includes("--")?"background-color:var("+n.value+");":"background-color:"+n.value),s},returnBackgroundImage(){let i=this.styles.backgroundImage.url;return i?`background-image: url(${i})`:""}},template:'\n    \n    \n    <div class="uip-flex uip-flex-column uip-row-gap-xs">\n    \n    \n      \x3c!--Opacity --\x3e\n      <div class="uip-grid-col-1-3">\n      \n        <div class="uip-text-muted uip-flex uip-flex-center"><span>{{strings.opacity}}</span></div>\n        \n        <div class="uip-flex uip-gap-xs uip-flex-no-wrap uip-flex-center">\n        \n          <input type="number" class="uip-input uip-padding-xxxs uip-w-60 uip-border-rounder" style="border-radius:var(--uip-border-radius-large)" v-model="styles.opacity">\n          \n          <input type="range" min="0" max="1" v-model="styles.opacity" step="0.1" class="uip-range uip-w-100">\n      \n        </div>\n        \n      </div>\n      \n      \n      \x3c!--Fill --\x3e\n      <div class="uip-grid-col-1-3">\n      \n        <div class="uip-text-muted uip-flex uip-flex-center"><span>{{strings.fill}}</span></div>\n        \n        <div class="uip-flex uip-gap-xs uip-flex-no-wrap uip-flex-center">\n        \n          <color-select :value="returnStyles.fill" :args="{ modes: [\'solid\', \'gradient\', \'variables\'] }" :returnData="function(d){styles.fill = d}"></color-select>\n      \n        </div>\n        \n      </div>\n      \n      \n      \x3c!--BackgroundImage --\x3e\n      <div class="uip-grid-col-1-3">\n      \n        <div class="uip-text-muted uip-flex uip-flex-center"><span>{{strings.backgroundImage}}</span></div>\n        \n        <div class="uip-flex uip-gap-xs uip-flex-no-wrap uip-flex-center">\n        \n          <inline-image-select :value="styles.backgroundImage" :returnData="function(d){styles.backgroundImage = d}"></inline-image-select>\n        \n        </div>\n        \n      </div>\n      \n      \n      \x3c!--Border --\x3e\n      <div class="uip-grid-col-1-3">\n      \n        <div class="uip-text-muted uip-flex uip-flex-center"><span>{{strings.border}}</span></div>\n        \n        <div v-if="styles.borders.length < 1" class="uip-flex uip-gap-xs uip-flex-column uip-row-gap-xs uip-flex-right">\n          <button class="uip-button-default uip-icon uip-text-l uip-border-rounder uip-padding-xxs" @click="styles.borders.push({})">add</button>\n        </div>\n        \n        <template v-for="(border, index) in styles.borders">\n        \n          \x3c!--Spacer--\x3e\n          <div v-if="index > 0"></div>\n        \n          <div class="uip-flex uip-gap-xs uip-row-gap-xs uip-flex-center">\n          \n              <drop-down dropPos="left" triggerClass="uip-flex uip-flex-grow uip-w-100p" containerClass="uip-flex uip-flex-grow uip-w-100p" :dontAnimate="true">\n                <template v-slot:trigger>\n                  <div class="uip-background-muted uip-border-rounder uip-padding-xxs uip-flex uip-gap-xs uip-w-100p">\n                    <div class="uip-border uip-border-round uip-w-18 uip-ratio-1-1 uip-flex" :style="returnBorderColor(border, index)"></div>\n                    <div class="uip-text-capitalize">{{border.style}} <span v-if="border.style" class="uip-text-muted">|</span> {{border.position}}</div>\n                  </div>\n                </template>\n                <template v-slot:content>\n                  <div class="uip-padding-s uip-border-bottom uip-text-bold">\n                    {{strings.border}}\n                  </div>\n                  <div class="uip-padding-s uip-flex">\n                    <border-designer :value="border" :returnData="function(d){styles.borders[index] = d}"></border-designer>\n                  </div>\n                </template>\n              </drop-down>\n              \n              <button class="uip-button-default uip-icon uip-border-rounder uip-padding-xxs uip-link-muted" @click="styles.borders.splice(index, 1)">close</button>\n            \n            </div>\n        \n        </template>\n        \n        <template v-if="returnBorders.length > 0">\n          \x3c!--Spacer--\x3e\n          <div></div>\n          \n          <button class="uip-button-default uip-icon uip-border-rounder uip-padding-xxs uip-link-muted" @click="styles.borders.push({})">add</button>\n        \n        \n        </template>\n      \n      </div>\n      \n      \n      \n      \n      \n      \x3c!--Radius --\x3e\n      <div class="uip-grid-col-1-3">\n      \n        <div class="uip-text-muted uip-flex uip-flex-center"><span>{{strings.radius}}</span></div>\n        \n        <div class="uip-flex uip-gap-xs uip-flex-no-wrap uip-flex-right uip-flex-column uip-row-gap-xs">\n        \n          <div class="uip-flex uip-flex-row uip-gap-xxxs uip-flex-right">\n          \n            <div class="uip-flex uip-flex-row uip-padding-xxxs uip-background-muted uip-border-rounder">\n              <div class="uip-icon uip-icon-m uip-text-xl uip-link-muted uip-border-rounder" @click="styles.radius.sync = true"\n              :class="{\'uip-background-default uip-text-emphasis\' : styles.radius.sync}">crop_square</div>\n              <div class="uip-icon uip-icon-m uip-text-xl uip-link-muted uip-border-rounder" @click="styles.radius.sync = false"\n              :class="{\'uip-background-default uip-text-emphasis\' : !styles.radius.sync}">crop_free</div>\n            </div>\n            \n            <div class="uip-flex uip-flex-row uip-padding-xxs uip-background-muted uip-border-round uip-text-center uip-flex-grow" v-if="styles.radius.sync">\n                <input class="uip-blank-input uip-text-center uip-w-100p uip-text-s" v-model="styles.radius.topleft" >\n            </div>\n            \n            <div class="uip-background-muted uip-border-round">\n             <units-select :value="styles.radius.units" :returnData="function(e){styles.radius.units = e}"></units-select>\n            </div>\n          \n          </div>\n        \n        </div>  \n        \n        \x3c!--Spacer--\x3e\n        <div v-if="!styles.radius.sync"></div>\n        \n        \n        <div class="uip-flex uip-flex-row uip-gap-xxxs uip-flex-right" v-if="!styles.radius.sync">\n        \n          <div class="uip-flex uip-flex-row uip-gap-xxxs uip-flex-right">\n            \n              <uip-tooltip :message="strings.topleft" :delay="0" containerClass="uip-flex">\n                <div class="uip-flex uip-flex-row uip-padding-xxs uip-background-muted uip-border-rounder uip-text-center">\n                    <input class="uip-blank-input uip-text-center uip-w-28 uip-text-s" v-model="styles.radius.topleft" >\n                </div>\n              </uip-tooltip>\n              \n              <uip-tooltip :message="strings.topright" :delay="0" containerClass="uip-flex">\n                <div class="uip-flex uip-flex-row uip-padding-xxs uip-background-muted uip-border-rounder uip-text-center">\n                    <input class="uip-blank-input uip-text-center uip-w-28 uip-text-s" v-model="styles.radius.topright" >\n                </div>\n              </uip-tooltip>\n              \n              <uip-tooltip :message="strings.bottomleft" :delay="0" containerClass="uip-flex">\n                <div class="uip-flex uip-flex-row uip-padding-xxs uip-background-muted uip-border-rounder uip-text-center">\n                    <input class="uip-blank-input uip-text-center uip-w-28 uip-text-s" v-model="styles.radius.bottomleft" >\n                </div>\n              </uip-tooltip>\n              \n              <uip-tooltip :message="strings.bottomright" :delay="0" containerClass="uip-flex">\n                <div class="uip-flex uip-flex-row uip-padding-xxs uip-background-muted uip-border-rounder uip-text-center" >\n                    <input class="uip-blank-input uip-text-center uip-w-28 uip-text-s" v-model="styles.radius.bottomright" >\n                </div>\n              </uip-tooltip>\n            \n          </div>\n          \n        </div>\n        \n      </div>\n      \n      \n      \x3c!--Overflow --\x3e\n      <div class="uip-grid-col-1-3">\n      \n        <div class="uip-text-muted uip-flex uip-flex-center"><span>{{strings.overflow}}</span></div>\n        \n        <div class="uip-flex uip-gap-xs uip-flex-no-wrap uip-flex-center">\n        \n          <select class="uip-input-small uip-padding-top-xxxs uip-padding-bottom-xxxs uip-max-w-100p  uip-w-100p uip-border-rounder" style="padding-top:2px;padding-bottom:2px;border-radius:var(--uip-border-radius-large)" v-model="styles.overflow">\n            <template v-for="item in overflowOptions">\n              <option :value="item.value">{{item.label}}</option>\n            </template>\n          </select>\n      \n        </div>\n        \n      </div>\n      \n      \n      \n      \n      \x3c!--Shadows --\x3e\n      <div class="uip-grid-col-1-3">\n      \n        <div class="uip-text-muted uip-flex uip-flex-center"><span>{{strings.shadow}}</span></div>\n        \n        <div v-if="styles.shadows.length < 1" class="uip-flex uip-gap-xs uip-flex-column uip-row-gap-xs uip-flex-right">\n          <button class="uip-button-default uip-icon uip-text-l uip-border-rounder uip-padding-xxs" @click="styles.shadows.push({})">add</button>\n        </div>\n        \n        <template v-for="(shadow, index) in styles.shadows">\n        \n          \x3c!--Spacer--\x3e\n          <div v-if="index > 0"></div>\n        \n          <div class="uip-flex uip-gap-xs uip-row-gap-xs uip-flex-center">\n          \n              <drop-down dropPos="left" triggerClass="uip-flex uip-flex-grow uip-w-100p" containerClass="uip-flex uip-flex-grow uip-w-100p" :dontAnimate="true">\n                <template v-slot:trigger>\n                  <div class="uip-background-muted uip-border-rounder uip-padding-xxs uip-flex uip-gap-xs uip-w-100p">\n                    <div class="uip-border uip-border-round uip-w-18 uip-ratio-1-1 uip-flex" :style="returnShadowColor(shadow, index)"></div>\n                    <div class="uip-text-capitalize">{{shadow.style}} <span v-if="shadow.style" class="uip-text-muted">|</span> {{strings.shadow}}</div>\n                  </div>\n                </template>\n                <template v-slot:content>\n                  <div class="uip-padding-s uip-border-bottom uip-text-bold">\n                    {{strings.shadow}}\n                  </div>\n                  <div class="uip-padding-s uip-flex">\n                    <shadow-designer :value="shadow" :returnData="function(d){styles.shadows[index] = d}"></shadow-designer>\n                  </div>\n                </template>\n              </drop-down>\n              \n              <button class="uip-button-default uip-icon uip-border-rounder uip-padding-xxs uip-link-muted" @click="styles.shadows.splice(index, 1)">close</button>\n            \n            </div>\n        \n        </template>\n        \n        <template v-if="styles.shadows.length > 0">\n          \x3c!--Spacer--\x3e\n          <div></div>\n          \n          <button class="uip-button-default uip-icon uip-border-rounder uip-padding-xxs uip-link-muted" @click="styles.shadows.push({})">add</button>\n          \n        \n        </template>\n      \n      </div>\n      \n      \n      \n      \x3c!--Outline --\x3e\n      <div class="uip-grid-col-1-3">\n      \n        <div class="uip-text-muted uip-flex uip-flex-center"><span>{{strings.outline}}</span></div>\n        \n        \n        <div class="uip-flex uip-gap-xs uip-row-gap-xs uip-flex-center">\n        \n            <drop-down dropPos="left" triggerClass="uip-flex uip-flex-grow uip-w-100p" containerClass="uip-flex uip-flex-grow uip-w-100p" :dontAnimate="true">\n              <template v-slot:trigger>\n                <div class="uip-background-muted uip-border-rounder uip-padding-xxs uip-flex uip-gap-xs uip-w-100p">\n                  <div class="uip-border uip-border-round uip-w-18 uip-ratio-1-1 uip-flex" :style="returnBorderColor(styles.outline)"></div>\n                  <div class="uip-text-capitalize">{{styles.outline.style}}</div>\n                </div>\n              </template>\n              <template v-slot:content>\n                <div class="uip-padding-s uip-border-bottom uip-text-bold">\n                  {{strings.outline}}\n                </div>\n                <div class="uip-padding-s uip-flex">\n                  <outline-designer :value="styles.outline" :returnData="function(d){styles.outline = d}"></outline-designer>\n                </div>\n              </template>\n            </drop-down>\n            \n            <button class="uip-button-default uip-icon uip-border-rounder uip-padding-xxs uip-link-muted" @click="styles.outline = {}">close</button>\n          \n        </div>\n        \n      \n      </div>\n      \n      \n      \n      \n      \n    \n    </div>\n    \n    '}};